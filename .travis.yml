language: go

go:
  - "1.x"

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
    - go: master
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

# Skip the install step. Don't `go get` dependencies.
install:
  # - curl -s -L https://github.com/GitTools/GitVersion/releases/latest | egrep -o '/GitTools/GitVersion/releases/download/v[0-9\.]*/GitVersion-bin-net40-v[0-9\.]*?\.zip' | wget --base=http://github.com/ -i - -O GitVersion.zip && unzip GitVersion.zip -d GitVersion && rm GitVersion.zip
  # - sudo apt-get update && sudo apt-get install -y mono-complete libcurl3
  # - export MONO_GC_PARAMS=nursery-size=8m
  - wget -q https://packages.microsoft.com/config/ubuntu/14.04/packages-microsoft-prod.deb && sudo dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb && sudo apt-get install apt-transport-https && sudo apt-get update && sudo apt-get install -y dotnet-runtime-2.1 jq
  - curl -s -L https://github.com/GitTools/GitVersion/releases/latest | egrep -o '/GitTools/GitVersion/releases/download/v[0-9\.]*/GitVersion-bin-coreclr-v[0-9\.]*?\.zip' | wget --base=http://github.com/ -i - -O GitVersion.zip && unzip GitVersion.zip -d GitVersion && rm GitVersion.zip
  - export GO111MODULE=on                                       # Enable module support
  - go get golang.org/x/lint/golint                             # Linter
  - go get honnef.co/go/tools/cmd/megacheck                     # Badass static analyzer/linter

# Don't email me the results of the test runs.
notifications:
  email: false

# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  # - VERSION=$(mono GitVersion/GitVersion.exe /showvariable FullSemVer)
  - dotnet GitVersion/GitVersion.dll | jq .FullSemVer --raw-output
  - VERSION=$(dotnet GitVersion/GitVersion.dll | jq .FullSemVer --raw-output)
  - echo $VERSION
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - test -z $(gofmt -s -l $GO_FILES)                            # Fail if a .go file hasn't been formatted with gofmt
  - go test -v -race ./...                                      # Run all the tests with the race detector enabled
  - go vet ./...                                                # go vet is the official Go static analyzer
  - megacheck ./...                                             # "go vet on steroids" + linter
  - golint -set_exit_status $(go list ./...)                    # one last linter
  - go run -ldflags "-X main.Version=$VERSION" $GO_FILES        # Test run the code with the version included, replace with go build in practice
