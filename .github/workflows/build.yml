name: Build Test and Release

on:
  push:
    branches:
      - master
      - beta
      - "feature/*"
      - "fix/*"
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.5
        with:
          versionSpec: "5.5.x"

      - name: Version with GitVersion # https://github.com/marketplace/actions/use-actions
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.5

      - name: Push version tag
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.gitversion.outputs.FullSemVer }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.5
        with:
          versionSpec: "5.5.x"

      - name: Version with GitVersion # https://github.com/marketplace/actions/use-actions
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.5

      - name: Build windows x64
        run: go build -v -ldflags "-X main.Version=${{ steps.gitversion.outputs.semVer }}" -o ${{ github.workspace }}/artifacts/win-x64/example.exe .
        env:
          GOOS: windows
          GOARCH: amd64

      - name: Build linux x86
        run: go build -v -ldflags "-X main.Version=${{ steps.gitversion.outputs.semVer }}" -o ${{ github.workspace }}/artifacts/linux-x86/example .
        env:
          GOOS: linux
          GOARCH: 386

      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: example-win-x64
          path: ${{ github.workspace }}/artifacts/win-x64/example.exe

      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: example-linux-x86
          path: ${{ github.workspace }}/artifacts/linux-x86/example

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Test
        run: go test -v -race .

      - name: Go Vet
        run: go vet .

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run golangci-lint # https://github.com/marketplace/actions/run-golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, test, lint, version]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/artifacts

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Release # https://github.com/semantic-release/semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
